name: Linting Changes and Deploy to AWS
on:
  push:
    branches:
      - main
env:
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  DJANGO_PROD_ENV: ${{ secrets.DJANGO_PROD_ENV }}

permissions: write-all

jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Linters
        run: |
          pip install -r server/requirements.txt
          pip install black
          pip install djlint
      
      - name: Lint Python files
        run: black server/
      
      # - name: Lint HTML files
      #   run: djlint app/templates --extension=html --reformat

      - name: Check for modified files
        id: git-check
        run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
      
      - name: Commit linting changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.email "jatin.kshatriya2821@gmail.com"
          git config --global user.name "Jatin"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated Linting changes"
          git push origin main
          
  Deploy:
    needs: Linting
    runs-on: ubuntu-latest
    steps:
    - name: Set permissions for private key
      run: |
        echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
        chmod 600 key.pem
    
    - name: Pull Recent git changes
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@43.205.226.200 'cd api && git pull origin main'

    - name: Set Django ENV
      run: |
        echo "${{ env.DJANGO_PROD_ENV }}" > .env.prod
        scp -i key.pem $(pwd)/.env.prod ubuntu@43.205.226.200:/home/ubuntu/api

    - name: Stop running container
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@43.205.226.200 'docker compose -f "/home/ubuntu/api/docker-compose.prod.yml" down'

    - name: Run new container
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@43.205.226.200 'docker compose -f "/home/ubuntu/api/docker-compose.prod.yml" up -d --build'